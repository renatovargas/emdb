---
title: "Nigeria Pilot Script"
author: "Renato Vargas"
---

# Introduction

In this pilot script we put together an emissions database for Nigeria, starting from a Social Accounting Matrix and combining information from the African Energy Commission (AFREC) energy balances, the Intergovernmental Panel on Climate Change (IPCC) Tier 1 Greenhouse Gas Emissions' coefficients, FAOSTAT emissions from agriculture, and EDGAR database on emissions from industrial processes and waste.

## Objectives

1. Source SAM.
1.1. Determine economic activity disaggregation.
1.2. Tag energy producing sectors.
1.3. Extract monetary values of energy inputs of all economic activities.
1.4. Extract percentage input use structures from energy commodities.
2. Source energy balance data.
2.1. Map energy commodities to percentage use structures from previous step.
2.2. Obtain physical use matrix.
3. Source emission coefficients.
3.1. Map physical matrix to emission coefficients.
3.2. Obtain physical emissions matrix.
4. Source FAOSTAT emissions.
5. Source EDGAR emissions and add to file.



## Preliminaries

We first call the packages that we need for the session.

```{r}
#| warning: false
#| message: false
#| output:  false
#| label: load-packages

library(tidyverse) # includes dplyr, ggplot2, purr...
library(readxl)    # to read from MS-Excel
library(openxlsx)  # to write to MS-Excel with options.
library(gt)
```

# Sourcing the Social Accounting Matrix (SAM)

We first source the entire SAM and isolate the intermediate and final consumption matrices. We don't import totals (column or row). 

```{r}
#| warning: false
#| message: false
#| label: source-sam

sam <- read_excel(
  "gears_db/data/sam/nga/SAM-Nigeria-2021.xlsx",
  sheet = "SAM-names",
  range = "B8:HJ224",
  col_names = T)

colnames(sam)[1] <- "sam_element"

sam_elements <- sam$sam_element
sam_elements_factors <- as.factor(sam$sam_elements)

emission_related_elements <- c(
  "c-coal", 
  "c-crudeoil", 
  "c-natgas", 
  "c-omin", 
  "c-petprod", 
  "c-fert",
  "c-ochemicals",
  "c-elegas",
  sam_elements[startsWith(sam_elements, "f-cap")]) 

```

We then extract the intermediate and final consumption matrix from the entire SAM, and then we further extract only the emissions-related vectors.

```{r}
#| warning: false
#| message: false
#| label: consumption

consumption_cols <- colnames(sam)[
  startsWith(colnames(sam), "a-") 
  | startsWith(colnames(sam), "h-")]

consumption <- sam |> 
  select( c(sam_element, consumption_cols))

emission_vectors <- consumption |> 
  filter(sam_element %in% emission_related_elements) |> 
  # replace NA's with zeros for completeness
  mutate(across(-1, ~ replace_na(.,0)))


```

We then pivot longer our dataset to match our emission factors and percentage structures. 
We then filter out the electricity economic activity for which we know their consumption exactly.


```{r}
#| warning: false
#| message: false
#| label: energy-flat-file

emission_flat_file <- emission_vectors |> 
  pivot_longer(
    cols = -1,
    names_to = "sam_column",
    values_drop_na = F
  )

emission_flat_file_no_processors <- emission_flat_file |> 
  filter( ! sam_column %in% c( "a-petprod","a-elegas") ) |> 
  group_by(sam_element) |> 
  mutate(
    sum_product_use = sum(value, na.rm = T),
    pct = if_else(sum_product_use == 0,0, value/sum_product_use)
  ) |> 
  ungroup()

emission_flat_file_processors <- emission_flat_file |> 
  filter(sam_column %in% c("a-petprod","a-elegas"))

```

Change products to columns.

```{r}
nga_energy_2018 <- readRDS("gears_db/data/afrec/nga_2018.RDS")
emission_factors <- read_excel("gears_db/data/coefficients/africa_ipcc_coefficients.xlsx")

nga_use <- nga_energy_2018 |> 
  filter(
    sut.code == 2,
    transaction.code %in% c("P2", "P3"),
    # ! isic %in% c("3510", "1920")
    ) |> 
  group_by(
    Product.name.en,
    isic,
    isic.description
  ) |> 
  summarize(
    energy_use = sum(value_seea, na.rm = T)
  ) |> 
  ungroup() |> 
  pivot_wider(
    names_from = c(isic,isic.description),
    values_from = energy_use,
    values_fill = 0
  )
```

```{r}
emission_flat_file_no_processors <- emission_flat_file_no_processors[
  ,-c(3,4)] |> 
  pivot_wider(
    names_from = sam_element,
    values_from = pct
  )

emission_flat_file_no_processors <- emission_flat_file_no_processors |> 
  mutate(
    
  )

```


