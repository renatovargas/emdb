[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Global Emissions Analysis for Resilient Systems (GEARS)",
    "section": "",
    "text": "The Global Emissions Analsyis for Resilient Systems (GEARS) initiative is an effort of the Monitoring and Analysing Food and Agricultural Policies (MAFAP) programme of the Agrifood Economics and Policy Division (ESA) of the Food and Agriculture Organization of the United Nations (FAO), which aims to provide a seamless integration of data on anthropogenic emissions of greenhouse gases and air pollution with National Accounts data at different levels of aggregation by economic activity for use with environmentally extended structural analysis frameworks like Computable General Equilibrium and Input-Output models. Its main output is the GEARS Database of anthropogenic emissions of greenhouse gases and air pollution by economic activity.\nIn addition to the database, GEARS also provides scripting facilities for the integration of different data sources, at different tiers of data availability by country and thorough documentation to abide by the principles of replicability, openness, and transparency.\nDisclaimer: While GEARS has been made possible with the support from the Food and Agriculture Organization of the United Nations (FAO), this is a work in progress, which has not undergone FAO’s rigorous review process and the methodological choices made here do not represent an institutional position of FAO, the Agrifood Economics and Policy Division (ESA), or any other of its instances. For more disclaimers, see the about page."
  },
  {
    "objectID": "documentation/methods/overview.html",
    "href": "documentation/methods/overview.html",
    "title": "Overview",
    "section": "",
    "text": "The Monitoring and Analyzing Food and Agricultural Policies (MAFAP) program seeks to establish country owned and sustainable systems to monitor, analyze, and reform food and agricultural policies to enable more effective, efficient and inclusive policy frameworks. Since policies are only enacted when they are properly funded, MAFAP tools are particularly geared towards helping countries—the agricultural public sector, in particular—optimize public budgets in the face of competing objectives, like economic growth, poverty reduction, better nutrition, or increasing yields, for example.\nIn the face of increasing vulnerability, climate risk mitigation and adaptation objectives have also become a part of the policy dialogue, as different international commitments (e.g. the Paris Agreement) present new demands and challenges to governments. To be able to provide objective functions within MAFAP tools, it has become necessary to extend its socioeconomic reach to include environmental objectives. Part of MAFAP Tools, the Global Emissions Database aims to provide a seamless integration of data on anthropogenic emissions of greenhouse gases and air pollution with structural analysis frameworks like Computable General Equilibrium and Input-Output models.\nHere we describe the approach used to construct an anthropogenic emissions accounting satellite framework by economic activity and driver, using globally available datasets. We aim to maintain compatibility with the System of National Accounts (SNA) with which economic performance is measured (European Commission et al., 2009). Where possible, we adopt approaches suggested by previous efforts at harmonization between Greenhouse Gas Inventories and SEEA pilot implementations (Eurostat, 2015; Flachenecker et al., 2018; Gutman et al., 2024).\nEmissions from combustion are estimated at the economic activity level and driver, using the Tier 1 method of the Intergovernmental Panel on Climate Change—IPCC—(IPCC, 1996, 2006) and energy use information from the Energy Statistics Database (UNSD, 2023). Emissions from Industrial Processes and Waste come from EDGAR (Crippa et al., 2023) and are mapped to economic activities following a broadly tested global approach that facilitates use with CGE frameworks; i.e. that of the Global Trade Analysis Project—GTAP—(Aguiar et al., 2019; Chepeliev, 2024).",
    "crumbs": [
      "Documentation",
      "Methods",
      "Overview"
    ]
  },
  {
    "objectID": "documentation/methods/overview.html#grenhouse-gas-inventories",
    "href": "documentation/methods/overview.html#grenhouse-gas-inventories",
    "title": "Overview",
    "section": "",
    "text": "Gases to be reported:\n\nCarbon dioxide (\\(CO_2\\)).\nNitrous oxide (\\(N_2O\\))\nMethane (\\(CH_4\\)).\nFluorinated gases.\n\nOnly as memorandum items:\n\nNitrogen oxides (\\(NOx\\)).\nCarbon monoxide (\\(CO\\)).\nVolatile compounds distinct from methane (\\(COVDM\\)).\nSulfur dioxide (\\(SO_2\\)).\n\nGreenhouse gas emissions are divided into four main groups:\n\nEnergy.\nIndustrial processes.\nAgriculture, forestry, land use.\nWaste.\n\nUsing Global Warming Potential (GWP), GHGs are aggregated to \\(CO_2 equivalent\\) or simply \\(CO_2e\\)).\nCRF - Common Reporting Format.",
    "crumbs": [
      "Documentation",
      "Methods",
      "Overview"
    ]
  },
  {
    "objectID": "documentation/methods/overview.html#air-emissions-accounts-seea-cf",
    "href": "documentation/methods/overview.html#air-emissions-accounts-seea-cf",
    "title": "Overview",
    "section": "",
    "text": "Explain the generic structure of an emissions account.\n{fig-air-emissions-account}",
    "crumbs": [
      "Documentation",
      "Methods",
      "Overview"
    ]
  },
  {
    "objectID": "documentation/methods/overview.html#harmonization",
    "href": "documentation/methods/overview.html#harmonization",
    "title": "Overview",
    "section": "",
    "text": "The Organisation for Economic Co-operation and Development (OECD) and the Statistical Office of the European Communities, Eurostat, developed a methodology for estimating Air Emissions Accounts under the SEEA-CF, based on the National Greenhouse Gas Inventories (NGGI) submitted to the UNFCCC (Eurostat 2015; Flachenecker, Guidetti, and Pionnier 2018). Our approach was informed by a recent exercise conducted at the country level in Argentina (Gutman et al. 2024).\nThe OECD-Eurostat methodology uses emission data from the National Greenhouse Gas Inventories (NGGI) as a starting point and assigns these emissions to households and industries according to ISIC Revision 4, using the same concepts and classifications as the System of National Accounts (SNA). To this end, publicly available correspondence tables in Excel format were developed, linking CRF categories with NACE Revision 2 at the two-digit level. “NACE” stands for the “Statistical Classification of Economic Activities in the European Community,” the European statistical classification of economic activities. The codes in NACE Rev. 2 are nearly identical to those in ISIC Rev. 4.",
    "crumbs": [
      "Documentation",
      "Methods",
      "Overview"
    ]
  },
  {
    "objectID": "documentation/methods/overview.html#global-databases",
    "href": "documentation/methods/overview.html#global-databases",
    "title": "Overview",
    "section": "",
    "text": "This version focuses on:\n\n\n\nGroup\nISO3\nName\n\n\n\n\nEastern_Africa\nBDI\nBurundi\n\n\n\nCOM\nComoros\n\n\n\nDJI\nDjibouti\n\n\n\nERI\nEritrea\n\n\n\nETH\nEthiopia\n\n\n\nKEN\nKenya\n\n\n\nMDG\nMadagascar\n\n\n\nMUS\nMauritius\n\n\n\nMYT\nMayotte\n\n\n\nREU\nReunion\n\n\n\nRWA\nRwanda\n\n\n\nSDN\nSudan\n\n\n\nSOM\nSomalia\n\n\n\nSYC\nSeychelles\n\n\n\nUGA\nUganda\n\n\nNorthern_Africa\nMAR\nMorocco\n\n\n\nDZA\nAlgeria\n\n\n\nEGY\nEgypt\n\n\n\nESH\nWestern Sahara\n\n\n\nLBY\nLibyan Arab Jamahiriya\n\n\n\nTUN\nTunisia\n\n\nWestern_Africa\nBEN\nBenin\n\n\n\nBFA\nBurkina Faso\n\n\n\nCAF\nCentral African Republic\n\n\n\nCIV\nCote d’Ivoire\n\n\n\nCMR\nCameroon\n\n\n\nCOD\nCongo_the Democratic Republic of the\n\n\n\nCOG\nCongo\n\n\n\nCPV\nCape Verde\n\n\n\nGAB\nGabon\n\n\n\nGHA\nGhana\n\n\n\nGIN\nGuinea\n\n\n\nGMB\nGambia\n\n\n\nGNB\nGuinea-Bissau\n\n\n\nGNQ\nEquatorial Guinea\n\n\n\nLBR\nLiberia\n\n\n\nMLI\nMali\n\n\n\nMRT\nMauritania\n\n\n\nNER\nNiger\n\n\n\nNGA\nNigeria\n\n\n\nSEN\nSenegal\n\n\n\nSHN\nSaint Helena\n\n\n\nSLE\nSierra Leone\n\n\n\nSTP\nSao Tome and Principe\n\n\n\nTCD\nChad\n\n\n\nTGO\nTogo",
    "crumbs": [
      "Documentation",
      "Methods",
      "Overview"
    ]
  },
  {
    "objectID": "documentation/methods/gears_processing.html",
    "href": "documentation/methods/gears_processing.html",
    "title": "GEARS database preparation",
    "section": "",
    "text": "In this session, we prepare a harmonized emissions dataset with inputs from FAOSTAT (FAO 2024) and EDGAR (Crippa et al. 2023). The objective is to have a single data lake from which we can extract data and make it compatible with any structure of economic activities.\n\n\n\n# Clean workspace\nrm(list = ls())\n\n# Load libraries\nlibrary(tidyverse)\nlibrary(haven)\nlibrary(readxl)\nlibrary(openxlsx)\nlibrary(gt)\n# library(sf)\n# library(tmap)\n# library(raster)\n\n\n\n\nNote that some datasets have been converted to R rds files in a previous step for space considerations.\n\n\n\n# EDGAR\nedgar &lt;- read_xlsx(\n  \"gears_db/data/edgar/EDGAR_AR5_GHG_1970_2023.xlsx\",\n  skip = 9,\n  sheet = \"IPCC 2006\")\n\nedgar_co2 &lt;- read_xlsx(\n  \"gears_db/data/edgar/IEA_EDGAR_CO2_1970_2023.xlsx\",\n  skip = 9,\n  sheet = \"IPCC 2006\")\n\nedgar_co2bio  &lt;- read_xlsx(\n  \"gears_db/data/edgar/EDGAR_CO2bio_1970_2023.xlsx\",\n  skip = 9,\n  sheet = \"IPCC 2006\")\n\nedgar_ch4 &lt;- read_xlsx(\n  \"gears_db/data/edgar/EDGAR_CH4_1970_2023.xlsx\",\n  skip = 9,\n  sheet = \"IPCC 2006\")\n\nedgar_n2o &lt;- read_xlsx(\n  \"gears_db/data/edgar/EDGAR_N2O_1970_2023.xlsx\",\n  skip = 9,\n  sheet = \"IPCC 2006\")\n\nedgar_f_gases &lt;- read_xlsx(\n  \"gears_db/data/edgar/EDGAR_AR5g_F-gases_1990_2023.xlsx\",\n  skip = 9,\n  sheet = \"IPCC 2006\")\n\n\n\n\n\n# FAOSTAT\nfaostat_total_emissions &lt;- \n  readRDS(\n    \"gears_db/data/faostat/total_emissions.rds\")\nfaostat_crops &lt;- \n  readRDS(\n    \"gears_db/data/faostat/crops.rds\")\nfaostat_drained_organic_soils &lt;- \n  readRDS(\n    \"gears_db/data/faostat/drained_organic_soils.rds\")\nfaostat_flags &lt;- \n  readRDS(\n    \"gears_db/data/faostat/flags.rds\")\nfaostat_livestock &lt;- \n  readRDS(\"gears_db/data/faostat/livestock.rds\")\nfaostat_production &lt;- \n  readRDS(\n    \"gears_db/data/faostat/production.rds\")\nfaostat_area_codes &lt;- \n  readRDS(\n    \"gears_db/data/faostat/area_codes.rds\")\n\n\n\n\n\nun_energy &lt;- readRDS(\n  \"gears_db/data/un_energy/un_energy.rds\"\n)\n\n\n\n\n\nfao_countries &lt;- read_xlsx(\n  \"gears_db/data/classifications/equivalence.xlsx\",\n  sheet = \"FAOSTAT COUNTRIES\")\nfao_ipcc &lt;- read_xlsx(\n  \"gears_db/data/classifications/equivalence.xlsx\",\n  sheet = \"FAOSTAT IPCC\")\nisic &lt;- read_xlsx(\n  \"gears_db/data/classifications/equivalence.xlsx\",\n  sheet = \"GWP ISIC\")\nun_energy_ipcc_coef &lt;- read_xlsx(\n  \"gears_db/data/coefficients/un_energy_ipcc_coefficients.xlsx\",\n  sheet = \"un_energy_coefficients\"\n)\n\n\n# Test to see units of measurement for each commodity\n# Fortunately no duplicates.\n# Use https://unstats.un.org/unsd/publication/SeriesF/SeriesF_44E.pdf\n# for conversions to TJ.\n# test &lt;- un_energy |&gt;\n#   group_by(Commodity, Unit) |&gt;\n#   summarize(Total = sum(Quantity, na.rm = T)) |&gt;\n#   ungroup()\n# write.table(test, \"clipboard\", sep = \"\\t\", row.names = F)"
  },
  {
    "objectID": "documentation/methods/gears_processing.html#preliminaries",
    "href": "documentation/methods/gears_processing.html#preliminaries",
    "title": "GEARS database preparation",
    "section": "",
    "text": "# Clean workspace\nrm(list = ls())\n\n# Load libraries\nlibrary(tidyverse)\nlibrary(haven)\nlibrary(readxl)\nlibrary(openxlsx)\nlibrary(gt)\n# library(sf)\n# library(tmap)\n# library(raster)"
  },
  {
    "objectID": "documentation/methods/gears_processing.html#datasets",
    "href": "documentation/methods/gears_processing.html#datasets",
    "title": "GEARS database preparation",
    "section": "",
    "text": "Note that some datasets have been converted to R rds files in a previous step for space considerations.\n\n\n\n# EDGAR\nedgar &lt;- read_xlsx(\n  \"gears_db/data/edgar/EDGAR_AR5_GHG_1970_2023.xlsx\",\n  skip = 9,\n  sheet = \"IPCC 2006\")\n\nedgar_co2 &lt;- read_xlsx(\n  \"gears_db/data/edgar/IEA_EDGAR_CO2_1970_2023.xlsx\",\n  skip = 9,\n  sheet = \"IPCC 2006\")\n\nedgar_co2bio  &lt;- read_xlsx(\n  \"gears_db/data/edgar/EDGAR_CO2bio_1970_2023.xlsx\",\n  skip = 9,\n  sheet = \"IPCC 2006\")\n\nedgar_ch4 &lt;- read_xlsx(\n  \"gears_db/data/edgar/EDGAR_CH4_1970_2023.xlsx\",\n  skip = 9,\n  sheet = \"IPCC 2006\")\n\nedgar_n2o &lt;- read_xlsx(\n  \"gears_db/data/edgar/EDGAR_N2O_1970_2023.xlsx\",\n  skip = 9,\n  sheet = \"IPCC 2006\")\n\nedgar_f_gases &lt;- read_xlsx(\n  \"gears_db/data/edgar/EDGAR_AR5g_F-gases_1990_2023.xlsx\",\n  skip = 9,\n  sheet = \"IPCC 2006\")\n\n\n\n\n\n# FAOSTAT\nfaostat_total_emissions &lt;- \n  readRDS(\n    \"gears_db/data/faostat/total_emissions.rds\")\nfaostat_crops &lt;- \n  readRDS(\n    \"gears_db/data/faostat/crops.rds\")\nfaostat_drained_organic_soils &lt;- \n  readRDS(\n    \"gears_db/data/faostat/drained_organic_soils.rds\")\nfaostat_flags &lt;- \n  readRDS(\n    \"gears_db/data/faostat/flags.rds\")\nfaostat_livestock &lt;- \n  readRDS(\"gears_db/data/faostat/livestock.rds\")\nfaostat_production &lt;- \n  readRDS(\n    \"gears_db/data/faostat/production.rds\")\nfaostat_area_codes &lt;- \n  readRDS(\n    \"gears_db/data/faostat/area_codes.rds\")\n\n\n\n\n\nun_energy &lt;- readRDS(\n  \"gears_db/data/un_energy/un_energy.rds\"\n)\n\n\n\n\n\nfao_countries &lt;- read_xlsx(\n  \"gears_db/data/classifications/equivalence.xlsx\",\n  sheet = \"FAOSTAT COUNTRIES\")\nfao_ipcc &lt;- read_xlsx(\n  \"gears_db/data/classifications/equivalence.xlsx\",\n  sheet = \"FAOSTAT IPCC\")\nisic &lt;- read_xlsx(\n  \"gears_db/data/classifications/equivalence.xlsx\",\n  sheet = \"GWP ISIC\")\nun_energy_ipcc_coef &lt;- read_xlsx(\n  \"gears_db/data/coefficients/un_energy_ipcc_coefficients.xlsx\",\n  sheet = \"un_energy_coefficients\"\n)\n\n\n# Test to see units of measurement for each commodity\n# Fortunately no duplicates.\n# Use https://unstats.un.org/unsd/publication/SeriesF/SeriesF_44E.pdf\n# for conversions to TJ.\n# test &lt;- un_energy |&gt;\n#   group_by(Commodity, Unit) |&gt;\n#   summarize(Total = sum(Quantity, na.rm = T)) |&gt;\n#   ungroup()\n# write.table(test, \"clipboard\", sep = \"\\t\", row.names = F)"
  },
  {
    "objectID": "documentation/methods/gears_processing.html#edgar-databases",
    "href": "documentation/methods/gears_processing.html#edgar-databases",
    "title": "GEARS database preparation",
    "section": "EDGAR databases",
    "text": "EDGAR databases\nThe first thing that we do with EDGAR is see which domains from IPCC it covers.\n\nedgar_ipcc_names &lt;- \n  data.frame(\n    code      = unique(\n      edgar$ipcc_code_2006_for_standard_report),\n    ipcc_name = unique(\n      edgar$ipcc_code_2006_for_standard_report_name)) |&gt; \n  arrange(code)\n\nedgar_ipcc_names |&gt; \n  gt()\n\n\n\n\n\n\n\ncode\nipcc_name\n\n\n\n\n1.A.1.a\nMain Activity Electricity and Heat Production\n\n\n1.A.1.bc\nPetroleum Refining - Manufacture of Solid Fuels and Other Energy Industries\n\n\n1.A.2\nManufacturing Industries and Construction\n\n\n1.A.3.a\nCivil Aviation\n\n\n1.A.3.b_noRES\nRoad Transportation no resuspension\n\n\n1.A.3.c\nRailways\n\n\n1.A.3.d\nWater-borne Navigation\n\n\n1.A.3.e\nOther Transportation\n\n\n1.A.4\nResidential and other sectors\n\n\n1.A.5\nNon-Specified\n\n\n1.B.1\nSolid Fuels\n\n\n1.B.2\nOil and Natural Gas\n\n\n2.A.1\nCement production\n\n\n2.A.2\nLime production\n\n\n2.A.3\nGlass Production\n\n\n2.A.4\nOther Process Uses of Carbonates\n\n\n2.B\nChemical Industry\n\n\n2.C\nMetal Industry\n\n\n2.D\nNon-Energy Products from Fuels and Solvent Use\n\n\n2.E\nElectronics Industry\n\n\n2.F\nProduct Uses as Substitutes for Ozone Depleting Substances\n\n\n2.G\nOther Product Manufacture and Use\n\n\n3.A.1\nEnteric Fermentation\n\n\n3.A.2\nManure Management\n\n\n3.C.1\nEmissions from biomass burning\n\n\n3.C.2\nLiming\n\n\n3.C.3\nUrea application\n\n\n3.C.4\nDirect N2O Emissions from managed soils\n\n\n3.C.5\nIndirect N2O Emissions from managed soils\n\n\n3.C.6\nIndirect N2O Emissions from manure management\n\n\n3.C.7\nRice cultivations\n\n\n4.A\nSolid Waste Disposal\n\n\n4.B\nBiological Treatment of Solid Waste\n\n\n4.C\nIncineration and Open Burning of Waste\n\n\n4.D\nWastewater Treatment and Discharge\n\n\n5.A\nIndirect N2O emissions from the atmospheric deposition of nitrogen in NOx and NH3\n\n\n5.B\nFossil fuel fires\n\n\n\n\n\n\n\nThe first thing that we see is that LULUCF is not included. We take note of this as we remove the domains that are covered in more detail in FAOSTAT (section 3). Originally, we estimated our own emissions for the energy part (section 1) from converting Energy Balances to the SEEA energy accounts format. However, this requires a Supply and Use table to distribute uses and applying TIER 1 coefficients. In this first version, we will take it as is from EDGAR.\nOur concern is that EDGAR takes use outside energy transformer industries from energy balance (i.e. other industrial, residential, transportation) at face value and we believe that this distribution can be improved if National Accounts is used to distribute intermediate and final consumption of energy outside the energy transformation sectors.\nWe could use total CO2 equivalent emissions aggregated from our edgar dataset, but full disaggregation by gas has been requested, so we perform our cleaning of the dataset for all of these and apply Tier 1 Global Warming Potential (GWP AR5) coefficients to individual datasets.\nBut first we use custom function transform_edgar_datasets to extract the relevant IPCC items and normalize the years structure.\n\n# Requires library(tidyverse)\n# Recursive function with direct naming of outputs\ntransform_edgar_datasets &lt;- function(datasets, dataset_names) {\n  if (length(datasets) == 0) {\n    return(invisible(NULL)) # End recursion\n  }\n  if(length(datasets)== 1){\n    print(\"The transformed datasets have the prefix 'transformed_'\")\n  }\n  # Process the first dataset\n  dataset &lt;- datasets[[1]]\n  name &lt;- dataset_names[[1]]\n  \n  # Apply the transformation\n  transformed &lt;- dataset |&gt; \n    filter(grepl(\"^(1|2|4|5)\", ipcc_code_2006_for_standard_report)) |&gt; \n    pivot_longer(\n      cols = starts_with(\"Y_\"),\n      names_to = \"Year\",\n      values_to= \"Value\"\n    ) |&gt; \n    mutate(\n      Year = as.numeric(sub(\"^Y_\", \"\", Year))\n    )\n  \n  # Assign the transformed dataset to the global environment\n  assign(paste0(\"transformed_\", name), transformed, envir = .GlobalEnv)\n  \n  # Recur with the rest of the datasets\n  transform_edgar_datasets(datasets[-1], dataset_names[-1])\n}\n\n\nIndividual datasets\n\ndatasets &lt;- list(\n  edgar_co2,\n  edgar_co2bio,\n  edgar_ch4,\n  edgar_n2o,\n  edgar_f_gases\n)\ndataset_names &lt;- c(\"co2\", \"co2bio\", \"ch4\", \"n2o\", \"edgar_f_gases\")\n\ntransform_edgar_datasets(datasets, dataset_names)\n\n[1] \"The transformed datasets have the prefix 'transformed_'\"\n\nrm(datasets)\n\n\n\nDataset binding and GWP calculation\nWith the datasets transformed, we bind them together and transform to GWP.\n\n# Usage\ngwp_edgar_total &lt;- rbind(\n  transformed_co2,\n  transformed_co2bio,\n  transformed_ch4,\n  transformed_n2o,\n  transformed_edgar_f_gases) |&gt; \n  mutate(\n    Value = case_when(\n      Substance == \"CH4\" ~ Value * 28 , # GWP CH4 AR5 100-year horizon\n      Substance == \"N2O\" ~ Value * 265, # GWP N2O AR5 100-year horizon\n      .default = Value\n    ),\n    Substance = case_when(\n      Substance == \"CO2\" ~ \"Emissions (CO2)\",\n      Substance == \"CO2bio\" ~ \"Emissions (CO2bio)\",\n      Substance == \"CH4\" ~ \"Emissions (CO2eq) from CH4 (AR5)\",\n      Substance == \"N2O\" ~ \"Emissions (CO2eq) from N2O (AR5)\",\n      Substance == \"GWP_100_AR5_PFC\" ~\n        \"Emissions (CO2eq) from PFC (AR5)\",\n      Substance == \"GWP_100_AR5_HFC\" ~\n        \"Emissions (CO2eq) from HFC (AR5)\",\n      Substance == \"GWP_100_AR5_HCFC\" ~\n        \"Emissions (CO2eq) from HCFC (AR5)\",\n      Substance == \"GWP_100_AR5_SF6\" ~\n        \"Emissions (CO2eq) from SF6 (AR5)\",\n      Substance == \"GWP_100_AR5_NF3\" ~\n        \"Emissions (CO2eq) from NF3 (AR5)\",\n      .default = Substance\n    ),\n    `Element Code` = case_when(\n      Substance == \"Emissions (CO2)\" ~ 7273,\n      Substance == \"Emissions (CO2bio)\" ~ 7279,\n      Substance == \"Emissions (CO2eq) from CH4 (AR5)\"  ~ 724413,\n      Substance == \"Emissions (CO2eq) from N2O (AR5)\"  ~ 724313,\n      Substance == \"Emissions (CO2eq) from PFC (AR5)\"  ~ 724995,\n      Substance == \"Emissions (CO2eq) from HFC (AR5)\"  ~ 724996,\n      Substance == \"Emissions (CO2eq) from HCFC (AR5)\" ~ 724997,\n      Substance == \"Emissions (CO2eq) from SF6 (AR5)\"  ~ 724998,\n      Substance == \"Emissions (CO2eq) from NF3 (AR5)\"  ~ 724999,\n      .default = NA\n    ),\n    Unit = \"kt\",\n    `Driver Code` =\n      ipcc_code_2006_for_standard_report,\n    Driver = \n      ipcc_code_2006_for_standard_report_name,\n    `Sector Code` = ipcc_code_2006_for_standard_report,\n    Sector = ipcc_code_2006_for_standard_report_name,\n    Sector = if_else(\n      `Sector Code`== \"1.A.5\", \n      \"Non-Specified from IPCC Energy Volume\",\n      Sector)\n  ) |&gt; \n  mutate(across(where(is.character), as.factor)) |&gt; \n  rename(\n    Element = Substance,\n    ISO3 = Country_code_A3,\n    `IPCC Code` = ipcc_code_2006_for_standard_report,\n    IPCC = ipcc_code_2006_for_standard_report_name) |&gt; \n  left_join(\n    fao_countries,\n    join_by(ISO3)\n  ) |&gt; \n  select(\n    `Area Code`,\n    Area,\n    ISO3,\n    `Driver Code`,\n    Driver,\n    `Sector Code`,\n    Sector,\n    `Element Code`,\n    Element,\n    `IPCC Code`, \n    IPCC,\n    Year,\n    Unit,\n    Value )\n\n# Remove all EDGAR inputs\nrm(list = \n  ls()[startsWith(ls(), \"transformed_\") |\n         startsWith(ls(), \"edgar\")])\n\n# And save to RDS\nsaveRDS(gwp_edgar_total, \"gears_db/data/outputs/gwp_edgar_total.rds\")"
  },
  {
    "objectID": "documentation/methods/gears_processing.html#faostat-databases",
    "href": "documentation/methods/gears_processing.html#faostat-databases",
    "title": "GEARS database preparation",
    "section": "FAOSTAT databases",
    "text": "FAOSTAT databases\n\nTotal emissions\nNow we turn our attention to FAOSTAT. First we clean the totals dataset faostat_total_emissions.\n\n# For reference\nas.data.frame(rbind(\n  cbind(\"elements\", as.matrix(\n    unique(faostat_total_emissions$`Element Code`)\n  ), as.matrix(\n    unique(faostat_total_emissions$Element)\n  )),\n  cbind(\"items\", as.matrix(\n    unique(faostat_total_emissions$`Item Code`)\n  ), as.matrix(unique(\n    faostat_total_emissions$`Item`\n  )))\n)) |&gt;\n  gt()\n\n\n\n\n\n\n\nV1\nV2\nV3\n\n\n\n\nelements\n7234\nDirect emissions (N2O)\n\n\nelements\n7236\nIndirect emissions (N2O)\n\n\nelements\n7230\nEmissions (N2O)\n\n\nelements\n724313\nEmissions (CO2eq) from N2O (AR5)\n\n\nelements\n723113\nEmissions (CO2eq) (AR5)\n\n\nelements\n7225\nEmissions (CH4)\n\n\nelements\n724413\nEmissions (CO2eq) from CH4 (AR5)\n\n\nelements\n7273\nEmissions (CO2)\n\n\nelements\n717815\nEmissions (CO2eq) from F-gases (AR5)\n\n\nitems\n5064\nCrop Residues\n\n\nitems\n5060\nRice Cultivation\n\n\nitems\n5066\nBurning - Crop residues\n\n\nitems\n5058\nEnteric Fermentation\n\n\nitems\n5059\nManure Management\n\n\nitems\n5063\nManure left on Pasture\n\n\nitems\n5062\nManure applied to Soils\n\n\nitems\n5061\nSynthetic Fertilizers\n\n\nitems\n6729\nDrained organic soils\n\n\nitems\n67292\nDrained organic soils (CO2)\n\n\nitems\n67291\nDrained organic soils (N2O)\n\n\nitems\n6994\nOn-farm energy use\n\n\nitems\n6751\nForestland\n\n\nitems\n6750\nNet Forest conversion\n\n\nitems\n6795\nSavanna fires\n\n\nitems\n6993\nFires in organic soils\n\n\nitems\n6992\nForest fires\n\n\nitems\n69921\nFires in humid tropical forests\n\n\nitems\n6991\nAgrifood Systems Waste Disposal\n\n\nitems\n6504\nFertilizers Manufacturing\n\n\nitems\n6508\nFood Retail\n\n\nitems\n6505\nFood Household Consumption\n\n\nitems\n6815\nFood Transport\n\n\nitems\n6821\nEnergy\n\n\nitems\n6817\nIPPU\n\n\nitems\n6818\nWaste\n\n\nitems\n6819\nOther\n\n\nitems\n6518\nAgrifood systems\n\n\nitems\n6996\nFarm gate\n\n\nitems\n6516\nLand Use change\n\n\nitems\n6517\nPre- and Post- Production\n\n\nitems\n6995\nEmissions on agricultural land\n\n\nitems\n5084\nEmissions from crops\n\n\nitems\n5085\nEmissions from livestock\n\n\nitems\n1711\nIPCC Agriculture\n\n\nitems\n1709\nAgricultural Soils\n\n\nitems\n1707\nLULUCF\n\n\nitems\n6824\nAFOLU\n\n\nitems\n6825\nAll sectors with LULUCF\n\n\nitems\n6829\nAll sectors without LULUCF\n\n\nitems\n6997\nPesticides Manufacturing\n\n\nitems\n6507\nFood Processing\n\n\nitems\n6506\nFood Packaging\n\n\n\n\n\n\n\n\n# Filter elements of interest\ntransformed_faostat_total &lt;- faostat_total_emissions |&gt;\n  filter(\n    `Item Code` %in% c(\n      5061, 67292, \n      67291, 6751, 6750, \n      6795,  6993, 6992\n    ),\n    # `Item Code` %in% c(\n    #   5064,  5060, 5066, \n    #   5058,  5059, 5063, \n    #   5062,  5061, 67292, \n    #   67291, 6751, 6750, \n    #   6795,  6993, 6992\n    # ), \n    `Element Code` %in% c(\n      724313, 724413,\n      7273, 717815)\n    ) |&gt; \n  rename(\n    `Driver Code` = `Item Code`,\n    Driver = Item\n  ) |&gt; \n  mutate(\n    `Sector Code` = 9999,\n    Sector = \"Undetermined\",\n    Sector = case_when(\n      `Driver Code`== 5061 ~\n      \"Manufacture of fertilizers and nitrogen compounds\",\n      `Driver Code` %in% c(67291, 6795) ~\n        \"Undetermined from Agriculture\",\n      `Driver Code` %in% c(67292, 6750, 6751, 6992, 6993) ~\n        \"Undetermined from LULUCF\",\n      .default = Sector),\n    `Sector Code` = case_when(\n      `Driver Code`== 5061 ~\n      2012,\n      `Driver Code` %in% c(67291, 6795) ~\n        9999,\n      `Driver Code` %in% c(67292, 6750, 6751, 6992, 6993) ~\n        9998,\n      .default = `Sector Code`)\n  ) |&gt;\n  # Finally select in order to \n  # bind to livestock and crops\n  select(\n    `Area Code`,\n    Area,\n    `Driver Code`,\n    Driver,\n    `Sector Code`,\n    Sector,\n    `Element Code`,\n    Element,\n    Year,\n    Unit,\n    Value\n  )\n\nThen the resulting items:\n\n# For reference\nas.data.frame(rbind(\n  cbind(\"elements\", as.matrix(\n    unique(transformed_faostat_total$`Element Code`)\n  ), as.matrix(\n    unique(transformed_faostat_total$Element)\n  )),\n  cbind(\"Drivers\", as.matrix(\n    unique(transformed_faostat_total$`Driver Code`)\n  ), as.matrix(unique(\n    transformed_faostat_total$`Driver`\n  )))\n)) |&gt;\n  gt()\n\n\n\n\n\n\n\nV1\nV2\nV3\n\n\n\n\nelements\n724313\nEmissions (CO2eq) from N2O (AR5)\n\n\nelements\n7273\nEmissions (CO2)\n\n\nelements\n724413\nEmissions (CO2eq) from CH4 (AR5)\n\n\nDrivers\n5061\nSynthetic Fertilizers\n\n\nDrivers\n67292\nDrained organic soils (CO2)\n\n\nDrivers\n67291\nDrained organic soils (N2O)\n\n\nDrivers\n6751\nForestland\n\n\nDrivers\n6750\nNet Forest conversion\n\n\nDrivers\n6795\nSavanna fires\n\n\nDrivers\n6993\nFires in organic soils\n\n\nDrivers\n6992\nForest fires\n\n\n\n\n\n\n\nThen we move to the detailed datasets.\n\n\nCrops\n\n# For reference\nas.data.frame(rbind(\n  cbind(\"elements\", as.matrix(\n    unique(faostat_crops$`Element Code`)\n  ), as.matrix(\n    unique(faostat_crops$Element)\n  )),\n  cbind(\"items\", as.matrix(\n    unique(faostat_crops$`Item Code`)\n  ), as.matrix(unique(\n    faostat_crops$`Item`\n  )))\n)) |&gt;\n  gt()\n\n\n\n\n\n\n\nV1\nV2\nV3\n\n\n\n\nelements\n72392\nCrop residues (N content)\n\n\nelements\n72302\nCrop residues (Emissions N2O)\n\n\nelements\n72342\nCrop residues (Direct emissions N2O)\n\n\nelements\n72362\nCrop residues (Indirect emissions N2O)\n\n\nelements\n7245\nBurning crop residues (Biomass burned, dry matter)\n\n\nelements\n72307\nBurning crop residues (Emissions N2O)\n\n\nelements\n72257\nBurning crop residues (Emissions CH4)\n\n\nelements\n5312\nArea harvested\n\n\nelements\n72255\nRice cultivation (Emissions CH4)\n\n\nelements\n72430\nCrops total (Emissions N2O)\n\n\nelements\n72440\nCrops total (Emissions CH4)\n\n\nelements\n516202\nNitrogen fertilizer content applied that leaches\n\n\nelements\n516201\nNitrogen fertilizer content applied that volatilises\n\n\nelements\n5162\nSynthetic fertilizers (Agricultural use)\n\n\nelements\n72303\nSynthetic fertilizers (Emissions N2O)\n\n\nelements\n72343\nSynthetic fertilizers (Direct emissions N2O)\n\n\nelements\n723632\nIndirect emissions (N2O that leaches) (Synthetic fertilizers)\n\n\nelements\n723631\nIndirect emissions (N2O that volatilises) (Synthetic fertilizers)\n\n\nitems\n44\nBarley\n\n\nitems\n56\nMaize (corn)\n\n\nitems\n156\nSugar cane\n\n\nitems\n79\nMillet\n\n\nitems\n116\nPotatoes\n\n\nitems\n27\nRice\n\n\nitems\n15\nWheat\n\n\nitems\n1712\nAll Crops\n\n\nitems\n3102\nNutrient nitrogen N (total)\n\n\nitems\n176\nBeans, dry\n\n\nitems\n75\nOats\n\n\nitems\n71\nRye\n\n\nitems\n83\nSorghum\n\n\nitems\n236\nSoya beans\n\n\n\n\n\n\n\n\n# Filter elements of interest\ntransformed_faostat_crops &lt;- faostat_crops |&gt; \n  filter(\n    ! `Element Code` %in% c(\n      5312, 5162, 516201, 516202,\n      7245, 72303, 72430, 72440, \n      72342, 72343, 72362,\n      723631, 723632, 72392\n    ),\n    `Item Code` != 1712\n    # ! `Element Code` %in% c(\n    #   5162, 516201, 516202,\n    #   7245, 72430, 72440,\n    #   72342, 72362,\n    #   723631, 723632, 72392\n    # )\n    ) |&gt; \n  # Global Warming Potential\n  mutate(\n    Value = case_when(\n      `Element Code` %in% c(\n        72255, 72257\n      ) ~ Value * 28, # GWP CH4 AR5 100-year horizon\n      `Element Code` %in% c(\n        72302,72307\n      ) ~ Value * 265 # GWP N2O AR5 100-year horizon\n    )\n  ) |&gt; \n  mutate(\n    temp_code = case_when(\n      `Element Code` %in% c(\n        72255, 72257\n      ) ~ 724413,\n      `Element Code` %in% c(\n        72307, 72302\n      ) ~ 724313,\n      .default = NA\n    ),\n    temp = case_when(\n      `Element Code` %in% c(\n        72255, 72257\n      ) ~ \"Emissions (CO2eq) from CH4 (AR5)\",\n      `Element Code` %in% c(\n        72307, 72302\n      ) ~ \"Emissions (CO2eq) from N2O (AR5)\",\n      .default = NA\n    )\n  ) |&gt; \n  rename(\n    `Sector Code` = `Item Code`,\n    `Sector` = Item,\n    `Driver Code` = `Element Code`,\n    Driver = Element,\n    `Element Code`= temp_code,\n    Element = temp\n  )|&gt; \n  mutate(\n    `Sector Code` = sprintf(\"%04d\", `Sector Code`)\n  ) |&gt; \n  # Finally select in order to \n  # bind to livestock and crops\n  select(\n    `Area Code`,\n    Area,\n    `Driver Code`,\n    Driver,\n    `Sector Code`,\n    Sector,\n    `Element Code`,\n    Element,\n    Year,\n    Unit,\n    Value\n  )\n\nThe resulting items\n\n# For reference\nas.data.frame(rbind(\n  cbind(\"Sectors\", as.matrix(\n    unique(transformed_faostat_crops$`Sector Code`)\n  ), as.matrix(\n    unique(transformed_faostat_crops$Sector)\n  )),\n  cbind(\"Drivers\", as.matrix(\n    unique(transformed_faostat_crops$`Driver Code`)\n  ), as.matrix(unique(\n    transformed_faostat_crops$`Driver`\n  )))\n)) |&gt;\n  arrange(V1,V2) |&gt; \n  gt()\n\n\n\n\n\n\n\nV1\nV2\nV3\n\n\n\n\nDrivers\n72255\nRice cultivation (Emissions CH4)\n\n\nDrivers\n72257\nBurning crop residues (Emissions CH4)\n\n\nDrivers\n72302\nCrop residues (Emissions N2O)\n\n\nDrivers\n72307\nBurning crop residues (Emissions N2O)\n\n\nSectors\n0015\nWheat\n\n\nSectors\n0027\nRice\n\n\nSectors\n0044\nBarley\n\n\nSectors\n0056\nMaize (corn)\n\n\nSectors\n0071\nRye\n\n\nSectors\n0075\nOats\n\n\nSectors\n0079\nMillet\n\n\nSectors\n0083\nSorghum\n\n\nSectors\n0116\nPotatoes\n\n\nSectors\n0156\nSugar cane\n\n\nSectors\n0176\nBeans, dry\n\n\nSectors\n0236\nSoya beans\n\n\n\n\n\n\n\n\ntransformed_faostat_crops |&gt; \n  filter(\n    Year == 2018,\n    Area == \"Nigeria\"\n  ) |&gt; \n  group_by(\n    Driver,\n    Sector,\n    Unit\n  ) |&gt; \n  summarize(\n    Total = sum(Value, na.rm = T)\n  ) |&gt; \n  ungroup() |&gt; \n  gt()\n\n`summarise()` has grouped output by 'Driver', 'Sector'. You can override using\nthe `.groups` argument.\n\n\n\n\n\n\n\n\nDriver\nSector\nUnit\nTotal\n\n\n\n\nBurning crop residues (Emissions CH4)\nMaize (corn)\nkt\n494.5136\n\n\nBurning crop residues (Emissions CH4)\nRice\nkt\n169.0444\n\n\nBurning crop residues (Emissions CH4)\nSugar cane\nkt\n4.3456\n\n\nBurning crop residues (Emissions CH4)\nWheat\nkt\n1.5596\n\n\nBurning crop residues (Emissions N2O)\nMaize (corn)\nkt\n121.3435\n\n\nBurning crop residues (Emissions N2O)\nRice\nkt\n41.4725\n\n\nBurning crop residues (Emissions N2O)\nSugar cane\nkt\n1.0600\n\n\nBurning crop residues (Emissions N2O)\nWheat\nkt\n0.3710\n\n\nCrop residues (Emissions N2O)\nMaize (corn)\nkt\n556.6590\n\n\nCrop residues (Emissions N2O)\nMillet\nkt\n114.4005\n\n\nCrop residues (Emissions N2O)\nPotatoes\nkt\n41.6580\n\n\nCrop residues (Emissions N2O)\nRice\nkt\n825.1040\n\n\nCrop residues (Emissions N2O)\nSorghum\nkt\n537.7910\n\n\nCrop residues (Emissions N2O)\nSoya beans\nkt\n71.0465\n\n\nCrop residues (Emissions N2O)\nSugar cane\nkt\n0.0000\n\n\nCrop residues (Emissions N2O)\nWheat\nkt\n6.3070\n\n\nRice cultivation (Emissions CH4)\nRice\nkt\n12462.5760\n\n\n\n\n\n\n\n\n\nLivestock\n\n# Filter elements of interest\ntransformed_faostat_livestock &lt;- faostat_livestock |&gt; \n  filter(\n    ! `Element Code` %in% c(\n      72380,  72381, 72386, \n      723601, 723602, 723611, \n      723612, 723801, 723802, \n      723811, 723812, 72340, \n      72341, 72346, 72360, \n      72361, 72366, 72431,\n      72441\n    ),\n    ! `Item Code` %in% c(\n      1757, 1759, 1760,\n      1054, 2029, 1749,\n      1048, 1755\n    )) |&gt;\n  mutate(\n    Value = case_when(\n      `Element Code` %in% c(\n        72254, 72256\n      ) ~ Value * 28, # GWP CH4 AR5 100-year horizon\n      `Element Code` %in% c(\n        72300, 72301, 72306\n      ) ~ Value * 265, # GWP N2O AR5 100-year horizon\n      .default = Value\n    )\n  ) |&gt; \n  mutate(\n    temp_code = case_when(\n      `Element Code` %in% c(\n        72254, 72256\n      ) ~ 724413,\n      `Element Code` %in% c(\n        72300, 72301, 72306\n      ) ~ 724313,\n       `Element Code` == 5111 ~ 5111,\n      .default = NA\n    ),\n    temp = case_when(\n      `Element Code` %in% c(\n        72254, 72256\n      ) ~ \"Emissions (CO2eq) from CH4 (AR5)\",\n      `Element Code` %in% c(\n        72300, 72301, 72306\n      ) ~ \"Emissions (CO2eq) from N2O (AR5)\",\n      `Element Code` == 5111 ~ \"Number of animals\",\n      .default = NA\n    )\n  ) |&gt; \n  rename(\n    `Driver Code` = `Element Code`,\n    Driver = Element,\n    `Sector Code` = `Item Code`,\n    Sector = Item,\n    `Element Code`= temp_code,\n    Element = temp\n  )|&gt;\n  mutate(\n    `Sector Code` = sprintf(\"%04d\", `Sector Code`)\n  ) |&gt; \n  # Finally select in order to \n  # bind to livestock and crops\n  select(\n    `Area Code`,\n    Area,\n    `Driver Code`,\n    Driver,\n    `Sector Code`,\n    Sector,\n    `Element Code`,\n    Element,\n    Year,\n    Unit,\n    Value\n  )\n\nThe resulting items\n\n# For reference\nas.data.frame(rbind(\n  cbind(\"Drivers\", as.matrix(\n    unique(transformed_faostat_livestock$`Driver Code`)\n  ), as.matrix(\n    unique(transformed_faostat_livestock$Driver)\n  )),\n  cbind(\"Sectors\", as.matrix(\n    unique(transformed_faostat_livestock$`Sector Code`)\n  ), as.matrix(unique(\n    transformed_faostat_livestock$`Sector`\n  )))\n)) |&gt;\n  arrange(V1,V2) |&gt; \n  gt()\n\n\n\n\n\n\n\nV1\nV2\nV3\n\n\n\n\nDrivers\n5111\nStocks\n\n\nDrivers\n72254\nEnteric fermentation (Emissions CH4)\n\n\nDrivers\n72256\nManure management (Emissions CH4)\n\n\nDrivers\n72300\nManure left on pasture (Emissions N2O)\n\n\nDrivers\n72301\nEmissions (N2O) (Manure applied)\n\n\nDrivers\n72306\nManure management (Emissions N2O)\n\n\nSectors\n0946\nBuffalo\n\n\nSectors\n0960\nCattle, dairy\n\n\nSectors\n0961\nCattle, non-dairy\n\n\nSectors\n0976\nSheep\n\n\nSectors\n1016\nGoats\n\n\nSectors\n1049\nSwine, market\n\n\nSectors\n1051\nSwine, breeding\n\n\nSectors\n1052\nChickens, layers\n\n\nSectors\n1053\nChickens, broilers\n\n\nSectors\n1068\nDucks\n\n\nSectors\n1079\nTurkeys\n\n\nSectors\n1096\nHorses\n\n\nSectors\n1107\nAsses\n\n\nSectors\n1110\nMules and hinnies\n\n\nSectors\n1126\nCamels\n\n\nSectors\n1177\nLlamas\n\n\n\n\n\n\n\n\n\nDataset binding\n\ngwp_faostat_total &lt;- rbind(\n  transformed_faostat_total,\n  transformed_faostat_crops,\n  transformed_faostat_livestock) |&gt;\n  left_join(fao_countries[,c(1,3)], join_by(`Area Code`)) |&gt;\n  left_join(fao_ipcc, join_by(Driver)) |&gt; \n  filter(! is.na(ISO3)) |&gt; \n  relocate(`IPCC Code`, `IPCC`, .before = Year) |&gt; \n  relocate(ISO3, .before = `Driver Code`)\n  \n\n# And save to RDS\nsaveRDS(gwp_faostat_total, \"gears_db/data/outputs/gwp_faostat_total.rds\")\n\nobjects &lt;- c(\n  \"faostat_total_emissions\", \n  \"faostat_crops\", \n  \"faostat_livestock\")\n\n# Remove only variables if they exist\nrm(list = objects[objects %in% ls()])"
  },
  {
    "objectID": "documentation/guides/gears-user-guide.html",
    "href": "documentation/guides/gears-user-guide.html",
    "title": "GEARS User Guide",
    "section": "",
    "text": "This document explains the different elements of the GEARS database and how to best use this resource.",
    "crumbs": [
      "Documentation",
      "Guides",
      "GEARS User Guide"
    ]
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "The Agrifood Economics and Policy Division (ESA) conducts economic research and policy analysis to support the transformation to more efficient, inclusive, resilient and sustainable agrifood systems for better production, better nutrition, a better environment, and a better life, leaving no one behind. ESA provides evidence-based support to national, regional and global policy processes and initiatives related to monitoring and analysing food and agricultural policies, agribusiness and value chain development, rural transformation and poverty, food security and nutrition information and analysis, resilience, bioeconomy, and climate-smart agriculture. The division also leads the production of two FAO flagship publications: The State of Food and Agriculture (SOFA) and The State of Food Security and Nutrition in the World (SOFI).\nWithin ESA, the Monitoring and Analysing Food and Agricultural Policies (MAFAP) programme seeks to establish country owned and sustainable systems to monitor, analyse, and reform food and agricultural policies to enable more effective, efficient and inclusive policy frameworks in 8 developing and emerging economies. MAFAP works with government institutions, research organizations and other partners to create sustainable policy monitoring systems and carry out a consistent set of policy and public expenditure analyses across a wide range of agricultural value chains. MAFAP analyses are used to inform targeted food and agricultural policy reforms that will result in a more conducive environment for agricultural investment and productivity growth, especially for smallholder farmers. As such, MAFAP supports most of FAO strategic objectives, and in particular those of enabling inclusive and efficient agricultural and food systems and helping eliminate hunger, food insecurity and malnutrition.\nA policy optimization modelling tool (that combines a recursive-dynamic computable general equilibrium model and multi-criteria decision-making techniques) is being used by the MAFAP programme team to develop and analyse scenarios where the public budget for the food and agriculture sector can be optimally re-allocated across different support measures (input subsidies, extension services, investments in different types of rural infrastructures, R&D, and so forth) and subsectors/commodities, aiming at improving on one or a combination of inclusive agricultural transformation (IAT) objectives such as: maximizing agrifood GDP, maximizing the number of off- farm jobs created in rural areas (vis-à-vis the number of on-farm jobs), and minimizing rural poverty. Most recently, the objective of minimizing the cost of the least-cost healthy diet was added to the tool. Next extensions to the tool comprise adding other objectives, notably the minimization of greenhouse gas (GHGs) emissions that are generated as a result of public expenditures in food and agriculture."
  },
  {
    "objectID": "about.html#general-information",
    "href": "about.html#general-information",
    "title": "About",
    "section": "",
    "text": "The Agrifood Economics and Policy Division (ESA) conducts economic research and policy analysis to support the transformation to more efficient, inclusive, resilient and sustainable agrifood systems for better production, better nutrition, a better environment, and a better life, leaving no one behind. ESA provides evidence-based support to national, regional and global policy processes and initiatives related to monitoring and analysing food and agricultural policies, agribusiness and value chain development, rural transformation and poverty, food security and nutrition information and analysis, resilience, bioeconomy, and climate-smart agriculture. The division also leads the production of two FAO flagship publications: The State of Food and Agriculture (SOFA) and The State of Food Security and Nutrition in the World (SOFI).\nWithin ESA, the Monitoring and Analysing Food and Agricultural Policies (MAFAP) programme seeks to establish country owned and sustainable systems to monitor, analyse, and reform food and agricultural policies to enable more effective, efficient and inclusive policy frameworks in 8 developing and emerging economies. MAFAP works with government institutions, research organizations and other partners to create sustainable policy monitoring systems and carry out a consistent set of policy and public expenditure analyses across a wide range of agricultural value chains. MAFAP analyses are used to inform targeted food and agricultural policy reforms that will result in a more conducive environment for agricultural investment and productivity growth, especially for smallholder farmers. As such, MAFAP supports most of FAO strategic objectives, and in particular those of enabling inclusive and efficient agricultural and food systems and helping eliminate hunger, food insecurity and malnutrition.\nA policy optimization modelling tool (that combines a recursive-dynamic computable general equilibrium model and multi-criteria decision-making techniques) is being used by the MAFAP programme team to develop and analyse scenarios where the public budget for the food and agriculture sector can be optimally re-allocated across different support measures (input subsidies, extension services, investments in different types of rural infrastructures, R&D, and so forth) and subsectors/commodities, aiming at improving on one or a combination of inclusive agricultural transformation (IAT) objectives such as: maximizing agrifood GDP, maximizing the number of off- farm jobs created in rural areas (vis-à-vis the number of on-farm jobs), and minimizing rural poverty. Most recently, the objective of minimizing the cost of the least-cost healthy diet was added to the tool. Next extensions to the tool comprise adding other objectives, notably the minimization of greenhouse gas (GHGs) emissions that are generated as a result of public expenditures in food and agriculture."
  },
  {
    "objectID": "about.html#disclaimer",
    "href": "about.html#disclaimer",
    "title": "About",
    "section": "Disclaimer",
    "text": "Disclaimer\nThe designations employed and the presentation of information on this website do not imply the expression of any opinion whatsoever on the part of FAO concerning the legal or development status of any country, territory, city or area or of its authorities, or concerning the delimitation of its frontiers or boundaries. The mention of specific companies or products of manufacturers, whether or not these have been patented, does not imply that these have been endorsed or recommended by FAO in preference to others of a similar nature that are not mentioned.\nInformation on this site is provided on an “as is” and “as available” basis. FAO makes every effort to ensure, but does not guarantee, the accuracy, completeness or authenticity of the information on this website. FAO reserves the right to alter, limit or discontinue any part of this service at its discretion. Under no circumstances shall FAO be liable for any loss, damage, liability or expense suffered that is claimed to result from the use of information posted on this site, including without limitation, any fault, error, omission, interruption or delay.\nHyperlinks to non-FAO websites do not imply any official endorsement of or responsibility on the part of FAO for the opinions, ideas, data or products presented at these locations, or guarantee the validity of the information provided. The sole purpose of links to non-FAO sites is to indicate further information available on related topics. The information is provided on the basis that users accessing the platform assume responsibility for assessing its relevance, accuracy and suitability for application.\nNo part of these Terms and Conditions shall constitute or be interpreted as a waiver of the privileges and immunities of FAO."
  },
  {
    "objectID": "documentation/methods/nigeria-pilot-script.html",
    "href": "documentation/methods/nigeria-pilot-script.html",
    "title": "Nigeria Pilot Script",
    "section": "",
    "text": "In this pilot script we put together an emissions database for Nigeria, starting from a Social Accounting Matrix and combining information from the African Energy Commission (AFREC) energy balances, the Intergovernmental Panel on Climate Change (IPCC) Tier 1 Greenhouse Gas Emissions’ coefficients, FAOSTAT emissions from agriculture, and EDGAR database on emissions from industrial processes and waste.\n\n\n\nSource SAM. 1.1. Determine economic activity disaggregation. 1.2. Tag energy producing sectors. 1.3. Extract monetary values of energy inputs of all economic activities. 1.4. Extract percentage input use structures from energy commodities.\nSource energy balance data. 2.1. Map energy commodities to percentage use structures from previous step. 2.2. Obtain physical use matrix.\nSource emission coefficients. 3.1. Map physical matrix to emission coefficients. 3.2. Obtain physical emissions matrix.\nSource FAOSTAT emissions.\nSource EDGAR emissions and add to file.\n\n\n\n\nWe first call the packages that we need for the session.\n\nlibrary(tidyverse) # includes dplyr, ggplot2, purr...\nlibrary(readxl)    # to read from MS-Excel\nlibrary(openxlsx)  # to write to MS-Excel with options.\nlibrary(gt)"
  },
  {
    "objectID": "documentation/methods/nigeria-pilot-script.html#objectives",
    "href": "documentation/methods/nigeria-pilot-script.html#objectives",
    "title": "Nigeria Pilot Script",
    "section": "",
    "text": "Source SAM. 1.1. Determine economic activity disaggregation. 1.2. Tag energy producing sectors. 1.3. Extract monetary values of energy inputs of all economic activities. 1.4. Extract percentage input use structures from energy commodities.\nSource energy balance data. 2.1. Map energy commodities to percentage use structures from previous step. 2.2. Obtain physical use matrix.\nSource emission coefficients. 3.1. Map physical matrix to emission coefficients. 3.2. Obtain physical emissions matrix.\nSource FAOSTAT emissions.\nSource EDGAR emissions and add to file."
  },
  {
    "objectID": "documentation/methods/nigeria-pilot-script.html#preliminaries",
    "href": "documentation/methods/nigeria-pilot-script.html#preliminaries",
    "title": "Nigeria Pilot Script",
    "section": "",
    "text": "We first call the packages that we need for the session.\n\nlibrary(tidyverse) # includes dplyr, ggplot2, purr...\nlibrary(readxl)    # to read from MS-Excel\nlibrary(openxlsx)  # to write to MS-Excel with options.\nlibrary(gt)"
  },
  {
    "objectID": "download.html",
    "href": "download.html",
    "title": "Download",
    "section": "",
    "text": "Here you can download different versions and aggregations of the GEARS database for selected countries. Please refer to the GEARS guide for details."
  },
  {
    "objectID": "documentation/methods/overview.html#emissions-from-industrial-processes-and-waste",
    "href": "documentation/methods/overview.html#emissions-from-industrial-processes-and-waste",
    "title": "Overview",
    "section": "Emissions from industrial processes and waste",
    "text": "Emissions from industrial processes and waste\nThe Emissions Database for Global Atmospheric Research—EDGAR—(Crippa et al., 2023) is used to source emissions data on industrial processes, waste, and other indicators. EDGAR datasets published by the European Commission are comprehensive, covering most of the greenhouse gas emissions inventories domains as shown in ?@tbl-edgar-domains, belonging to 1) energy; 2) Industrial processes and product use; 3) Agriculture, forestry, and other land use; 4) Waste; and 5) Other (mainly indirect emissions from deposition of Nitrogen).\n\nEDGAR greenhouse gas inventory domain coverage{#tbl-edgar-domains} Source: authors based on Crippa, et al. (2023).\n\n\n\n\n\n\nCode\nIPCC Greenhouse Gas Inventory domain\n\n\n\n\n1.A.1.a\nMain Activity Electricity and Heat Production\n\n\n1.A.1.bc\nPetroleum Refining - Manufacture of Solid Fuels and Other Energy Industries\n\n\n1.A.2\nManufacturing Industries and Construction\n\n\n1.A.3.a\nCivil Aviation\n\n\n1.A.3.b_noRES\nRoad Transportation no resuspension\n\n\n1.A.3.c\nRailways\n\n\n1.A.3.d\nWater-borne Navigation\n\n\n1.A.3.e\nOther Transportation\n\n\n1.A.4\nResidential and other sectors\n\n\n1.A.5\nNon-Specified\n\n\n1.B.1\nSolid Fuels\n\n\n1.B.2\nOil and Natural Gas\n\n\n2.A.1\nCement production\n\n\n2.A.2\nLime production\n\n\n2.A.3\nGlass Production\n\n\n2.A.4\nOther Process Uses of Carbonates\n\n\n2.B\nChemical Industry\n\n\n2.C\nMetal Industry\n\n\n2.D\nNon-Energy Products from Fuels and Solvent Use\n\n\n2.E\nElectronics Industry\n\n\n2.F\nProduct Uses as Substitutes for Ozone Depleting Substances\n\n\n2.G\nOther Product Manufacture and Use\n\n\n3.A.1\nEnteric Fermentation\n\n\n3.A.2\nManure Management\n\n\n3.C.1\nEmissions from biomass burning\n\n\n3.C.2\nLiming\n\n\n3.C.3\nUrea application\n\n\n3.C.4\nDirect N2O Emissions from managed soils\n\n\n3.C.5\nIndirect N2O Emissions from managed soils\n\n\n3.C.6\nIndirect N2O Emissions from manure management\n\n\n3.C.7\nRice cultivations\n\n\n4.A\nSolid Waste Disposal\n\n\n4.B\nBiological Treatment of Solid Waste\n\n\n4.C\nIncineration and Open Burning of Waste\n\n\n4.D\nWastewater Treatment and Discharge\n\n\n5.A\nIndirect N2O emissions from the atmospheric deposition of nitrogen in NOx and NH3\n\n\n5.B\nFossil fuel fires\n\n\n\nIt is important to note that large scale biomass burning with Savannah burning, forest fires, and sources and sinks from land-use, land-use change and forestry (LULUCF) are excluded and are better covered in the FAOSTAT dataset, explained in the following section. Moreover, EDGAR datasets published by the European Commission contain disaggregated information for the elements in the table above in Gigagrams for CO2, CO2 from biofuels, CH4, N2O, and “F-Gases” PFC, HFC, HCFC, and NF3. Although the EDGAR initiative provides a single dataset with aggregate GHG emissions expressed in CO2eq using the Global Warming Potential values of the Fifth Assessment Report of the IPCC, all gases are summed into a single figure for each element in table 1, not distinguished from the individual shares of CO2 tons equivalent contributed by each gas. For that reason, we used the individualized datasets per gas in Gigagrams and performed the Global Warming Potential AR5 calculation ourselves, except for F-Gases, for which the conversion was made by EDGAR.\n\nConversion coefficients for methane and nitrous oxide{tbl-conversion-ar5} Source: Myhre, et al. (2013, p. 731).\n\n\n\n\n\n\nGas\nGlobal Warming Potential Values AR5 100-year horizon\n\n\n\n\nMethane (CH4)\n28 CO2 tons equivalent / Gigagram\n\n\nNitrous Oxide (N2O)\n265 CO2 tons equivalent / Gigagram\n\n\n\nWhile the Edgar dataset is very comprehensive, it lacks the disaggregation by driver to satisfy the needs of CGE studies, when it comes to energy and certain agricultural aspects. That means that it is possible to identify to which volume of the IPCC a certain value belongs, but not which fuel product is responsible for the emission. For example, we can identify that CO2 emissions are emitted by the Road Transportation no resuspension sector, but not whether the emissions come from the burning of Diesel or from Bioethanol or any other fuel type. For that reason, we replace the values related to energy with those from our own estimates using the United Nations Energy Database and default emission factors and those elements related to agriculture and LULUCF with emissions data from FAOSTAT at the driver level (explained in the FAOSTAT section below). For completeness, the remaining domains; i.e. industrial processes, waste, and others are linked to total output of specific economic activities, using the International Standard Industrial Classification (United Nations, 2008) where possible (see Table 3).\n\nMapping from EDGAR to individual ISIC economic activities{tbl-edgar-isic-map}\n\n\n\n\n\n\n\n\nIPCC Code\nIPCC\nISIC Code\nISIC\n\n\n\n\n2.A.1\nCement production\n2394\nManufacture of cement, lime and plaster\n\n\n2.A.2\nLime production\n2394\nManufacture of cement, lime and plaster\n\n\n2.A.3\nGlass Production\n2310\nManufacture of glass and glass products\n\n\n2.A.4\nOther Process Uses of Carbonates\n9999\nUndetermined\n\n\n2.B\nChemical Industry\n2011\nManufacture of basic chemicals\n\n\n2.C\nMetal Industry\n2410\nManufacture of basic iron and steel\n\n\n2.D\nNon-Energy Products from Fuels and Solvent Use\n9999\nUndetermined\n\n\n2.E\nElectronics Industry\n2640\nManufacture of consumer electronics\n\n\n2.F\nProduct Uses as Substitutes for Ozone Depleting Substances\n9999\nUndetermined\n\n\n2.G\nOther Product Manufacture and Use\n9999\nUndetermined\n\n\n4.A\nSolid Waste Disposal\n3821\nTreatment and disposal of non-hazardous waste\n\n\n4.B\nBiological Treatment of Solid Waste\n3822\nTreatment and disposal of hazardous waste\n\n\n4.C\nIncineration and Open Burning of Waste\n3822\nTreatment and disposal of hazardous waste",
    "crumbs": [
      "Documentation",
      "Methods",
      "Overview"
    ]
  },
  {
    "objectID": "documentation/methods/overview.html#greenhouse-gas-emissions-from-fuel-combustion-and-fugitive-emissions",
    "href": "documentation/methods/overview.html#greenhouse-gas-emissions-from-fuel-combustion-and-fugitive-emissions",
    "title": "Overview",
    "section": "Greenhouse Gas Emissions from Fuel Combustion and Fugitive Emissions",
    "text": "Greenhouse Gas Emissions from Fuel Combustion and Fugitive Emissions\nA choice was made to estimate emissions from combustion again, although other global datasets already have this information in the aggregate, because it was important to be able to distinguish between the different fuels driving the combustion and the sectors in which this happened. Greenhouse gas emissions from fuel combustion and fugitive emissions were estimated applying Tier 1 coefficients from the 2006 IPCC Guidelines for National Greenhouse Gas Inventories to national information on fuel uses from the United Nations Energy Database (UNSD, 2023).\n\\[\nE_{GHG,fuel} =  C_{fuel} * F_{GHG, fuel}\n\\tag{1}\\]\nWhere:\n\n\\(E_{GHG,fuel}\\) = Emissions of a given GHG by type of fuel (kg GHG).\n\\(C_{fuel}\\)= Amount of fuel combusted (TJ).\n\\(F_{GHG, fuel}\\) = default emission factor of a given GHG by type of fuel (kg gas/TJ).\n\nThe UN dataset is organized according to the standard construction of Energy Balances and it features transactions related to supply, imports, stock variation, exports, transformation, and final use of energy resources.",
    "crumbs": [
      "Documentation",
      "Methods",
      "Overview"
    ]
  },
  {
    "objectID": "documentation/methods/gears_processing.html#un-energy-data-1",
    "href": "documentation/methods/gears_processing.html#un-energy-data-1",
    "title": "GEARS database preparation",
    "section": "UN Energy Data",
    "text": "UN Energy Data\n\nenergy_total &lt;- un_energy |&gt; \n  filter(Driver == 1,\n         OfInterest == 1) |&gt; \n  left_join(un_energy_ipcc_coef, join_by(Commodity)) |&gt;\n  # Estimate emissions using IPCC 2006 Coefficients\n  mutate(\n    # Includes transformation from Kg to thousand metric tons\n    \"Emissions (CO2)\" = \n      Quantity * to_TJ * CO2 * 10^(-6),\n    # GWP CH4 AR5 100-year horizon (* 28)\n    \"Emissions (CO2eq) from CH4 (AR5)\" = \n      Quantity * to_TJ * CH4 * 10^(-6) * 28,\n    # GWP N2O AR5 100-year horizon (* 265)\n    \"Emissions (CO2eq) from N2O (AR5)\" = \n      Quantity * to_TJ * N2O * 10^(-6) * 265\n  ) |&gt; \n  select(\n    Country.or.Area,\n    Year,\n    Transaction,\n    Commodity,\n    `Emissions (CO2)`,\n    `Emissions (CO2eq) from CH4 (AR5)`,\n    `Emissions (CO2eq) from N2O (AR5)`\n  ) |&gt; \n  pivot_longer(\n    cols = c(\n      `Emissions (CO2)`,\n      `Emissions (CO2eq) from CH4 (AR5)`,\n      `Emissions (CO2eq) from N2O (AR5)`\n    ),\n    names_to = \"Element\",\n    values_to = \"Value\"\n  ) |&gt; \n  rename(\n    Area = Country.or.Area,\n    Sector = Transaction,\n    Driver = Commodity\n  ) |&gt; \n  arrange(\n    Area,\n    Year,\n    Sector,\n    Driver\n  )\n\nTest for UN Energy elements\n\n# table &lt;- combined_data |&gt; \n#   filter(Year== 2020,\n#          OfInterest == 1,\n#          Driver == 1) |&gt; \n#   group_by(Transaction, Commodity) |&gt; \n#   summarize(Total = sum(Quantity, na.rm = T)) |&gt; \n#   pivot_wider(names_from = Commodity, values_from = Total)\n# \n# write.table(\n#   table,\n#   \"clipboard\",\n#   sep = \"\\t\",\n#   na = \"\",\n#   row.names = F)"
  }
]